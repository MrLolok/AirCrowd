spring:
  application:
    name: airport-management-service
  
  cloud:
    config:
      uri: http://localhost:8888
      username: ${CONFIG_SERVER_USERNAME:admin}
      password: ${CONFIG_SERVER_PASSWORD:admin123}

  # Database Configuration (PostgreSQL for operational data)
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:aircrowd}
    username: ${POSTGRES_USERNAME:aircrowd}
    password: ${POSTGRES_PASSWORD:aircrowd123}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /airport-management

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    it.lorenzoangelino.aircrowd: DEBUG
    org.springframework: WARN
    org.hibernate: WARN
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"